import RootStore from '../../RootStore/root-store';import {OrdersResponseType, SendDataOrderType, StatusType} from "../../../api/ordersApi";import {LoadingEnum} from "../../types/types";export class CourierOrderService {    rootStore: typeof RootStore;    constructor(rootStore: typeof RootStore) {        this.rootStore = rootStore;    }    async getCourierOrders(): Promise<void> {        this.rootStore.Notification.setIsLoading(LoadingEnum.fetching);        try {            return await this.rootStore.CourierOrderStore.getCourierOrders();        } catch (e) {            this.rootStore.Notification.setNotification('error', true, 'getCourierOrders err');        } finally {            this.rootStore.Notification.setIsLoading(LoadingEnum.success);        }    }    async getTakenCourierOrders(): Promise<void> {        this.rootStore.Notification.setIsLoading(LoadingEnum.fetching);        try {            return await this.rootStore.CourierOrderStore.getTakenCourierOrders(this.rootStore.AuthStore.user._id);        } catch (e) {            this.rootStore.Notification.setNotification('error', true, 'getTakenCourierOrders err');        } finally {            this.rootStore.Notification.setIsLoading(LoadingEnum.success);        }    }    async assignCourierOrder(): Promise<void> {        this.rootStore.Notification.setIsLoading(LoadingEnum.fetching);        try {            return await this.rootStore.CourierOrderStore.assignCourierOrder(this.rootStore.AuthStore.user._id);        } catch (e) {            this.rootStore.Notification.setNotification('error', true, 'pickOrder err');        } finally {            this.rootStore.Notification.setIsLoading(LoadingEnum.success);        }    }    async updateOrderStatus(status: StatusType): Promise<void> {        this.rootStore.Notification.setIsLoading(LoadingEnum.fetching);        try {            return await this.rootStore.CourierOrderStore.updateOrderStatus(status);        } catch (e) {            this.rootStore.Notification.setNotification('error', true, 'updateOrderStatus err');        } finally {            this.rootStore.Notification.setIsLoading(LoadingEnum.success);        }    }}export default CourierOrderService;