import {action, makeObservable, observable} from 'mobx';import {ApiOrderType, ordersApi, OrdersResponseType, SendDataOrderType, StatusType} from "../../api/ordersApi";export class OrderStore {    order: ApiOrderType = {} as ApiOrderType    orders: ApiOrderType[] = [] as ApiOrderType[]    totalOrders: number = 0    statusOrder: StatusType | null = null    setOrderData(order: ApiOrderType): void {        this.order = order    };    setStatus(status: StatusType): void {        this.statusOrder = status    };    setOrders(orders: OrdersResponseType): void {        this.orders = [...this.orders, ...orders.results]        this.totalOrders = orders.totalCount    };    setClearOrders(): void {        this.orders = []        this.totalOrders = 0    };    async getOrders(userId: string, status?: StatusType, limit?: number, offset?: number) {        const {data} = await ordersApi.getOrderUserId(userId, status, limit, offset)        this.setOrders(data)        return data    }    async sendOrder(order: SendDataOrderType) {        const {data} = await ordersApi.postOrders(order)        this.setOrderData(data)        this.setStatus(data.status)    }    constructor() {        makeObservable(this, {            order: observable,            orders: observable,            totalOrders: observable,            statusOrder: observable,            setOrderData: action,            setStatus: action,            setOrders: action,            sendOrder: action,            setClearOrders: action,        });        this.setOrderData = this.setOrderData.bind(this)        this.setClearOrders = this.setClearOrders.bind(this)        this.setOrders = this.setOrders.bind(this)        this.setStatus = this.setStatus.bind(this)    }}export default new OrderStore();